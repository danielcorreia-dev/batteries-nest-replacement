// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  name             String
  email            String             @unique
  password         String
  username         String             @unique
  points           Int
  avatar           String?
  bio              String?
  Discard          Discard[]
  userAchievements UserAchievements[]

  @@map("users")
}

model Company {
  id                Int              @id @default(autoincrement())
  name              String
  openingHours      String           @map("opening_hours")
  closeHours        String           @map("close_hours")
  phone             String
  zip               String
  number            String
  addressComplement String?          @map("address_complement")
  locationId        Int?             @unique @map("location_id")
  location          Location?        @relation(fields: [locationId], references: [id])
  discard           Discard[]
  CompanyCategory   CompanyCategory? @relation(fields: [companyCategoryId], references: [id])
  companyCategoryId Int?             @map("company_category_id")
  Benefit           Benefit[]

  @@map("companies")
}

model Benefit {
  id        Int     @id @default(autoincrement())
  name      String
  points    Int
  companyId Int     @map("company_id")
  company   Company @relation(fields: [companyId], references: [id])
  active    Boolean @default(true)

  @@map("benefits")
}

model Discard {
  id        Int         @id @default(autoincrement())
  type      DiscardType
  points    Int
  date      DateTime
  userId    Int         @map("user_id")
  user      User        @relation(fields: [userId], references: [id])
  companyId Int         @map("company_id")
  company   Company     @relation(fields: [companyId], references: [id])

  @@map("discards")
}

model CompanyCategory {
  id      Int       @id @default(autoincrement())
  name    String
  company Company[]

  @@map("company_categories")
}

model Location {
  id        Int      @id @default(autoincrement())
  latitude  Float
  longitude Float
  Company   Company?

  @@map("locations")
}

model Achievement {
  id               Int                @id @default(autoincrement())
  name             String
  required         Int
  userAchievements UserAchievements[]

  @@map("achievements")
}

model UserAchievements {
  id             Int         @id @default(autoincrement())
  userId         Int         @map("user_id")
  user           User        @relation(fields: [userId], references: [id])
  achievementsId Int         @map("achievements_id")
  achievement    Achievement @relation(fields: [achievementsId], references: [id])
  date           DateTime

  @@map("user_achievements")
}

enum DiscardType {
  BATTERY
  BOTH
  MEDICINE

  @@map("discard_type")
}
